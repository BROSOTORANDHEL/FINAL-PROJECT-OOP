/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sari.saristore;

import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import javax.swing.table.TableModel;

/**
 *
 * @author Marc Loyd
 */
public class Add extends javax.swing.JFrame {

    /**
     * Creates new form Add
     */
    public Add() {
        initComponents();
        setLocationRelativeTo(null);
    }

    private boolean validateFields(String formType) {
        if (formType.equals("new") && !textName.getText().equals("") && !textQuanti.getText().equals("") && !textPrice.getText().equals("") && !textCategory.getText().equals("")) {
            return false;
        } else {
            return false;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        textName = new javax.swing.JTextField();
        textQuanti = new javax.swing.JTextField();
        textPrice = new javax.swing.JTextField();
        textCategory = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        buttonAdd = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textName.setBackground(new java.awt.Color(0, 0, 0));
        textName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        textName.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(textName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 180, 40));

        textQuanti.setBackground(new java.awt.Color(0, 0, 0));
        textQuanti.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        textQuanti.setForeground(new java.awt.Color(255, 255, 255));
        textQuanti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textQuantiActionPerformed(evt);
            }
        });
        jPanel1.add(textQuanti, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 180, 40));

        textPrice.setBackground(new java.awt.Color(0, 0, 0));
        textPrice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        textPrice.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(textPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, 180, 40));

        textCategory.setBackground(new java.awt.Color(0, 0, 0));
        textCategory.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        textCategory.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(textCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, 180, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Name");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Price");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Quantity");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Category (Optional)");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));

        buttonAdd.setBackground(new java.awt.Color(0, 153, 0));
        buttonAdd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonAdd.setText("Add");
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });
        jPanel1.add(buttonAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 410, -1, -1));

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 410, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Add Product");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textQuantiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textQuantiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textQuantiActionPerformed

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        // TODO add your handling code here:

        String ProductName = textName.getText();
        String Quantity = textQuanti.getText();
        String Price = textPrice.getText();
        String Category = textCategory.getText(); // Category is now optional

// Validate fields
        if (ProductName.isEmpty() || Quantity.isEmpty() || Price.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Product Name, Quantity, and Price are required");
        } else {
            try {
                Connection con = store.MyConnection.getConnection();

                // Check if Category is provided or set it to null
                if (Category.isEmpty()) {
                    Category = null;
                }

                // Query to check if the product exists with the same name and price (Category is optional)
                String checkQuery = "SELECT * FROM inventory WHERE Name = ? AND Price = ?"
                        + (Category != null ? " AND Category = ?" : "");
                PreparedStatement checkPs = con.prepareStatement(checkQuery);
                checkPs.setString(1, ProductName);
                checkPs.setString(2, Price);

                if (Category != null) {
                    checkPs.setString(3, Category);
                }

                ResultSet rs = checkPs.executeQuery();

                if (rs.next()) {
                    // If the product exists, update the quantity
                    int existingQuantity = rs.getInt("Quantity");
                    int newQuantity = existingQuantity + Integer.parseInt(Quantity);

                    String updateQuery = "UPDATE inventory SET Quantity = ? WHERE Name = ? AND Price = ?"
                            + (Category != null ? " AND Category = ?" : "");
                    PreparedStatement updatePs = con.prepareStatement(updateQuery);
                    updatePs.setInt(1, newQuantity);
                    updatePs.setString(2, ProductName);
                    updatePs.setString(3, Price);

                    if (Category != null) {
                        updatePs.setString(4, Category);
                    }

                    updatePs.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Product quantity updated successfully");
                } else {
                    // If the product doesn't exist, insert a new record
                    if (Category == null) {
                        // If Category is not provided, you can either set it to a default or leave it null
                        Category = "Unknown"; // Default category, if you want to set one
                    }

                    String insertQuery = "INSERT INTO inventory (Name, Quantity, Price, Category) VALUES (?, ?, ?, ?)";
                    PreparedStatement insertPs = con.prepareStatement(insertQuery);
                    insertPs.setString(1, ProductName);
                    insertPs.setString(2, Quantity);
                    insertPs.setString(3, Price);
                    insertPs.setString(4, Category);

                    insertPs.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Product added successfully");
                }

                // Close the current window and show the home screen
                setVisible(false);
                new Home().setVisible(true);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }

    }//GEN-LAST:event_buttonAddActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        setVisible(false);
        new Home().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField textCategory;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField textPrice;
    private javax.swing.JTextField textQuanti;
    // End of variables declaration//GEN-END:variables
}
